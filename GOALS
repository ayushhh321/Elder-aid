The Elderly Assistance Portal is a web-based service designed to connect elderly individuals needing support with volunteers who can assist with daily tasks, provide companionship, and address healthcare needs.
Additionally, the platform includes a payment system to compensate volunteers for their services.

 Development: 
-- Frontend: HTML, CSS, and JavaScript frameworks 
-- Backend: Implement the database using  MongoDB , NodeJS
-- Multer for PDF.
-- UI



âœ… Features Implemented in the Elderly Assistance Portal
ðŸ”µ 1. User Authentication
Register (Elderly & Volunteer)

Elderly and Volunteers can register by providing:
Full Name, Email, Password
For Elderly: Age, Location, Contact, Needs, Health Conditions, Medical History (PDF Upload)
For Volunteer: Skills, Availability, Location, Payment Rate
ðŸ“Œ Instruction: Ensure CORS settings on the backend match your frontend URL after deployment.
Login (Elderly & Volunteer)

Users can log in using their email and password.
Upon successful login:
User is redirected based on their role:
Elderly â†’ dashboard.html
Volunteer â†’ volunteer.html
User ID and Type are stored in localStorage.
ðŸ“Œ Instruction: Ensure API URLs point to your backend (e.g., /api/login).
ðŸ”µ 2. Elderly Dashboard
Profile Management

View and update personal details:
Name, Age, Gender, Location, Contact, Blood Group, Monthly Budget
Upload Profile Image (Updates live preview).
ðŸ“Œ Instruction: Ensure MongoDB stores updated profile details.
Request Assistance

Elderly users can submit service requests with:
Help Type, Urgency, Location, Budget, Preferred Time
Upload Medical History (PDF)
Requests are stored in the database and marked as "pending."
ðŸ“Œ Instruction: Ensure the uploads folder exists in production for file storage.
View Request Status

Elderly users can track the latest request status:
pending, accepted, or rejected
If rejected, the reason is displayed.
ðŸ“Œ Instruction: Ensure the latest task is fetched and displayed correctly.
ðŸ”µ 3. Volunteer Dashboard
View Available Requests

Volunteers can see all pending requests with:
Help Needed, Urgency, Location, Budget
Medical History (PDF Link)
ðŸ“Œ Instruction: Ensure file paths are correct for PDF viewing.
Accept or Reject Requests

Accept Request: Updates the task with volunteer details and removes it from the available list.
Dial Pad Feature: On acceptance, a dialer opens with the elderlyâ€™s contact number.
Reject Request: Marks the task as rejected (without requiring a reason).
ðŸ“Œ Instruction: Ensure requests update task status in MongoDB.
ðŸ”µ 4. File Upload and Download
Medical History Upload (PDF)
Elderly users can upload medical history PDFs when requesting assistance.
Volunteers can view/download these PDFs via a "Click Here" link.
ðŸ“Œ Instruction: Ensure the /uploads folder is public and accessible in deployment.
ðŸ”µ 5. Session Management
After login:
User data (userId, userType, userName) is stored in localStorage.
Logout Feature:
Clears localStorage and redirects to the login page.
ðŸ”µ 6. Error Handling and Notifications
Frontend:
Displays alerts for success and failure (e.g., "Request submitted successfully!").
Backend:
Global error handler (500 Internal Server Error, 404 Not Found).
Input validation and clear error messages.